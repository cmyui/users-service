name: generate-openapi-schema

on:
  push:
    paths:
      - mount/app/api/rest/**.py
      - mount/app/models/**.py
      - mount/app/common/responses.py

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  APP_ENV: ${{ vars.APP_ENV }}
  APP_COMPONENT: ${{ vars.APP_COMPONENT }}
  APP_HOST: ${{ vars.APP_HOST }}
  APP_PORT: ${{ vars.APP_PORT }}
  LOG_LEVEL: ${{ vars.LOG_LEVEL }}
  READ_DB_SCHEME: ${{ vars.READ_DB_SCHEME }}
  READ_DB_USER: ${{ vars.READ_DB_USER }}
  READ_DB_PASS: ${{ vars.READ_DB_PASS }}
  READ_DB_HOST: ${{ vars.READ_DB_HOST }}
  READ_DB_PORT: ${{ vars.READ_DB_PORT }}
  READ_DB_NAME: ${{ vars.READ_DB_NAME }}
  WRITE_DB_SCHEME: ${{ vars.WRITE_DB_SCHEME }}
  WRITE_DB_USER: ${{ vars.WRITE_DB_USER }}
  WRITE_DB_PASS: ${{ vars.WRITE_DB_PASS }}
  WRITE_DB_HOST: ${{ vars.WRITE_DB_HOST }}
  WRITE_DB_PORT: ${{ vars.WRITE_DB_PORT }}
  WRITE_DB_NAME: ${{ vars.WRITE_DB_NAME }}
  MIN_DB_POOL_SIZE: ${{ vars.MIN_DB_POOL_SIZE }}
  MAX_DB_POOL_SIZE: ${{ vars.MAX_DB_POOL_SIZE }}
  DB_USE_SSL: ${{ vars.DB_USE_SSL }}
  SERVICE_READINESS_TIMEOUT: ${{ vars.SERVICE_READINESS_TIMEOUT }}
  REDIS_HOST: ${{ vars.REDIS_HOST }}
  REDIS_PORT: ${{ vars.REDIS_PORT }}
  REDIS_DB: ${{ vars.REDIS_DB }}
  INITIALLY_AVAILABLE_DB : ${{ vars.INITIALLY_AVAILABLE_DB }}

jobs:
  generate-openapi-schema:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install project requirements
      run: pip install -r requirements.txt

    - name: Generate openapi schema
      run: python generate-openapi.py

    - name: Commit openapi schema
      run: |
        git config --global user.name "CI"
        git config --global user.email "username@users.noreply.github.com"
        git add openapi.json
        git commit --message "[CI] generate openapi schema" || exit 0
        git push
